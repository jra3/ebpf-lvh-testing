name: eBPF Tests with LVH

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-ebpf:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kernel-version:
          - "5.15-main"
          - "6.1-main"
          - "6.6-main"
          - "bpf-next"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Install LVH
      run: |
        go install github.com/cilium/little-vm-helper/cmd/lvh@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-kvm mmdebstrap debian-archive-keyring libguestfs-tools zstd
        sudo apt-get install -y clang llvm libelf-dev libbpf-dev gcc-multilib
    
    - name: Pull kernel
      run: |
        if [[ "${{ matrix.kernel-version }}" == "bpf-next" ]]; then
          echo "Skipping bpf-next pull (will use a stable kernel instead)"
          lvh kernels pull 6.6-main
        else
          lvh kernels pull ${{ matrix.kernel-version }}
        fi
    
    - name: Download base image
      run: |
        wget -O base.qcow2 https://github.com/cilium/little-vm-helper/releases/download/v0.0.16/base.qcow2.zst
        zstd -d base.qcow2.zst
        rm base.qcow2.zst
    
    - name: Compile eBPF program
      run: |
        make -C src/bpf clean all
    
    - name: Run tests in VM
      run: |
        # Determine kernel version to use
        if [[ "${{ matrix.kernel-version }}" == "bpf-next" ]]; then
          KERNEL_VERSION="6.6-main"
        else
          KERNEL_VERSION="${{ matrix.kernel-version }}"
        fi
        
        # Find kernel image
        KERNEL_PATH=$(find $HOME/.cache/lvh/kernels -name bzImage -path "*${KERNEL_VERSION}*" | head -1)
        echo "Using kernel: $KERNEL_PATH"
        
        # Start VM with host mount
        lvh run --image base.qcow2 \
          --kernel "$KERNEL_PATH" \
          --host-mount $(pwd) \
          --qemu-disable-kvm \
          --daemonize \
          -p 2222:22 || {
            echo "Failed to start VM, trying without daemonize"
            timeout 300 lvh run --image base.qcow2 \
              --kernel "$KERNEL_PATH" \
              --host-mount $(pwd) \
              --qemu-disable-kvm \
              -p 2222:22 &
            sleep 60
          }
        
        # Wait for VM and test SSH
        echo "Waiting for VM to boot..."
        for i in {1..30}; do
          if ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -p 2222 root@localhost true 2>/dev/null; then
            echo "VM is ready"
            break
          fi
          echo "Attempt $i/30..."
          sleep 5
        done
        
        # Run tests
        ssh -o StrictHostKeyChecking=no -p 2222 root@localhost bash -s << 'EOF'
          set -e
          cd /host
          apt-get update && apt-get install -y libbpf-dev bpftool make clang
          ./scripts/run_tests.sh
        EOF
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.kernel-version }}
        path: test-results/